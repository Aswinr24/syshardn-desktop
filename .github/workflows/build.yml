name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Syshardn Desktop ${{ github.ref }}
          body: |
            Desktop application for Syshardn system hardening tool.
            
            **Downloads:**
            - macOS: `.dmg` file
            - Linux: `.AppImage`, `.deb`, or `.rpm` file
            - Windows: `.exe` installer
            
            See [README](https://github.com/Aswinr24/syshardn-desktop/blob/main/README.md) for installation instructions.
          draft: false
          prerelease: false

  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Prepare Linux build deps
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y p7zip-full xz-utils libfuse2 fakeroot rpm dpkg-dev
          sudo snap install snapcraft --classic || true
          if [ -f node_modules/app-builder-bin/linux/x64/app-builder ]; then
            chmod +x node_modules/app-builder-bin/linux/x64/app-builder || true
          fi
          rm -rf ~/.cache/electron-builder || true

      - name: Build and Release
        run: |
          if [ "${{ matrix.os }}" == "macos-latest" ]; then
            npm run build:mac
          elif [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            npm run build:linux
          else
            npm run build:win
          fi
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.dmg
            dist/*.zip
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
            dist/*.exe
            dist/*.msi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
